apiVersion: v1
kind: Pod
metadata:
  name: jupyterhub-kube
  labels:
    app.kubernetes.io/name: nvidia-cuda-jupyterhub
spec:
  containers:
  - name: jupyterhub-kube
    image: batrakunal/jupyterhub:cuda11.2.0_cudnn8_ubuntu20_kube
    command: ["/bin/sh", "-c", "jupyterhub", "-f", "/opt/jupyterhub/jupyterhub_config.py"]
    ports:
    - containerPort: 8000
      name: http-port-8000
    - containerPort: 8888
      name: http-port-8888
    - containerPort: 22
      name: http-port-22
    resources:
      requests:
        memory: "64Gi"
        cpu: 8
      limits:
        memory: "128Gi"
        cpu: 32
    env:
    - name: NVIDIA_VISIBLE_DEVICES
      value: "0,1"
    volumeMounts:
    - mountPath: /opt
      name: opt
#    - mountPath: /data
#      name: container-volume-from-pvc
  volumes:
  - name: opt
    hostPath:
      path: /data/docker/volumes/conda_all/_data
  - name: container-volume-from-pvc
    persistentVolumeClaim:
      claimName: my-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jupyterhub-svc
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: nvidia-cuda-jupyterhub
  ports:
  - port: 8000
    targetPort: 8000
    # Optional field
    # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
    nodePort: 30005
    protocol: TCP
    name: http
  - port: 22
    targetPort: 22
    nodePort: 32222
    protocol: TCP
    name: ssh
